// 外边距 内边距
@use "sass:math";

$sSizes: (0: math.div(0, $defSize) + rem,
  2: math.div(2, $defSize) + rem,
  3: math.div(3, $defSize) + rem,
  5: math.div(5, $defSize) + rem,
  7: math.div(7, $defSize) + rem,
  8: math.div(8, $defSize) + rem,
  10: math.div(10, $defSize) + rem,
  15: math.div(15, $defSize) + rem,
  20: math.div(20, $defSize) + rem,
  25: math.div(25, $defSize) + rem,
  30: math.div(30, $defSize) + rem,
  35: math.div(35, $defSize) + rem,
  40: math.div(40, $defSize) + rem,
  45: math.div(45, $defSize) + rem,
  50: math.div(50, $defSize) + rem,
  55: math.div(55, $defSize) + rem,
  60: math.div(60, $defSize) + rem,
  65: math.div(65, $defSize) + rem,
  70: math.div(70, $defSize) + rem,
  75: math.div(75, $defSize) + rem,
  80: math.div(80, $defSize) + rem,
);

@each $key,
$val in $sSizes {
  .my-ma-#{$key} {
    margin: $val;
  }

  .my-mx-#{$key} {
    margin-left: $val;
    margin-right: $val;
  }

  .my-my-#{$key} {
    margin-top: $val;
    margin-bottom: $val;
  }

  .my-ml-#{$key} {
    margin-left: $val;
  }

  .my-mr-#{$key} {
    margin-right: $val;
  }

  .my-mt-#{$key} {
    margin-top: $val;
  }

  .my-mb-#{$key} {
    margin-bottom: $val;
  }

  .my-pa-#{$key} {
    padding: $val;
  }

  .my-px-#{$key} {
    padding-left: $val;
    padding-right: $val;
  }

  .my-py-#{$key} {
    padding-top: $val;
    padding-bottom: $val;
  }

  .my-pl-#{$key} {
    padding-left: $val;
  }

  .my-pr-#{$key} {
    padding-right: $val;
  }

  .my-pt-#{$key} {
    padding-top: $val;
  }

  .my-pb-#{$key} {
    padding-bottom: $val;
  }
}

// 字体大小
@for $i from 10 through 50 {
  .fs-#{$i} {
    font-size: math.div($i, $defSize) + rem;
  }
}

// 行高
@for $i from 1 through 99 {
  .lh-#{$i} {
    line-height: math.div($i, $defSize) + rem;
  }
}

// 字体粗细
@for $i from 1 through 9 {
  .fw-#{($i * 100)} {
    font-weight: $i * 100;
  }
}

// 字间距大小
@for $i from 1 through 20 {
  .ls-#{$i} {
    letter-spacing: math.div($i, $defSize) + rem;
  }
}

// 字体粗细
.fw-normal {
  font-weight: normal;
}

.fw-lighter {
  font-weight: lighter;
}

.fw-bold {
  font-weight: bold;
}

// 字体位置
.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-gradient {
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  // color: transparent;
}

// 边框
.bd-all {
  border: 1px solid $c000;
}

.bd-left {
  border-left: 1px solid $cfff4;
}

.bd-right {
  border-right: 1px solid $cfff4;
}

.bd-top {
  border-top: 1px solid $cfff4;
}

.bd-bottom {
  border-bottom: 1px solid $cfff4;
}

// 色值  字体色、背景色、边框色
$colors: ("primary": $primary,
  "primary3": $primary3,
  "second": $second,
  "second3": $second3,
  "third": $third,
  "third3": $third3,
  "success": $success,
  "success3": $success3,
  "warn": $warn,
  "warn3": $warn3,
  "error": $error,
  "error3": $error3,
  "info": $info,
  "golden": $golden,
  "fff": $cfff,
  "fff8": $cfff8,
  "fff6": $cfff6,
  "fff4": $cfff4,
  "fff2": $cfff2,
  "fff0": $cfff0,
  "000": $c000,
  "0008": $c0008,
  "0006": $c0006,
  "0004": $c0004,
  "0002": $c0002,
  "0000": $c0000,
  "none": $cnone,
);

@each $key,
$val in $colors {
  .fc-#{$key} {
    color: $val;
  }

  .bg-#{$key} {
    background-color: $val;
  }

  .bdc-#{$key} {
    border-color: $val;
  }
}

$borderSizes: (1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  8: 8,
  10: 10,
  20: 20,
  40: 40,
);

@each $key,
$val in $borderSizes {
  .bdw-#{$key} {
    border-width: $val + px;
  }

  .bdr-#{$key} {
    border-radius: $val + px;
  }
}

.bdr-all {
  border-radius: 50%;
}

.bds-dotted {
  border-style: dotted;
}

.bds-dashed {
  border-style: dashed;
}

.bds-double {
  border-style: double;
}

// 宽高
.full-screen {
  width: 100%;
  height: 100%;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

// 高度
@for $i from 5 through 80 {
  .height-#{$i} {
    min-height: itemMinHeight($i * 0.01);
    height: 1vh * $i;
    max-height: itemMaxHeight($i * 0.01);
  }
}

// flex布局
.row {
  display: flex;
}

.col {
  display: flex;
  flex-direction: column;
}

.wrap {
  flex-wrap: wrap;
}

.flex-other {
  flex: 1;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-around {
  justify-content: space-around;
}

.justify-between {
  justify-content: space-between;
}

.align-top {
  align-items: flex-start;
}

.align-middle {
  align-items: center;
}

.align-bottom {
  align-items: flex-end;
}

// 定位
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.sticky {
  position: sticky;
  top: 0;
}

.left-top,
.top-left {
  left: 0;
  top: 0;
}

.right-top,
.top-right {
  right: 0;
  top: 0;
}

.left-bottom,
.bottom-left {
  left: 0;
  bottom: 0;
}

.right-bottom,
.bottom-right {
  right: 0;
  bottom: 0;
}

// 超出...显示
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ellipsis2 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.over-hidden {
  overflow: hidden;
}

.over-auto {
  overflow: auto;
}

// input大小
.def-input,
.def-select {
  width: 220px;
}

.small-input,
.small-select {
  width: 180px;
}

.xing::before {
  position: relative;
  content: "*";
  color: $error;
  right: 2px;
}

// 事件穿透
.events-auto {
  pointer-events: auto;
}

.events-none {
  pointer-events: none;
}

// 滚动
.scroll {
  overflow: auto;
  scroll-behavior: smooth;
}

.scroll-y {
  overflow-y: auto;
  scroll-behavior: smooth;
}

.scroll-x {
  overflow-x: auto;
  scroll-behavior: smooth;
}

// 其他
.z-index-top {
  z-index: 9;
}

.cursor {
  cursor: pointer;
}

.iconfont {
  line-height: normal;
}

// 弹窗
.dialog-box {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: $c0004;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 99;

  .dialog-bg {
    background: $c0006;

    .dialog-header {
      box-shadow: 0px 4px 10px 0px $c0002;
    }
  }
}

// 过渡、动画
$degree: (15: 15deg,
  30: 30deg,
  45: 45deg,
  60: 60deg,
  75: 75deg,
  90: 90deg,
  105: 105deg,
  120: 120deg,
  135: 135deg,
  150: 150deg,
  165: 165deg,
  180: 180deg,
  195: 195deg,
  210: 210deg,
  225: 225deg,
  240: 240deg,
  255: 255deg,
  270: 270deg,
  285: 285deg,
  300: 300deg,
  315: 315deg,
  330: 330deg,
  345: 345deg,
);

@each $key,
$val in $degree {
  .rotate#{$key} {
    transform: rotate($val);
  }

  .skew#{$key} {
    transform: skew($val);
  }
}

.rotate-all {
  animation: rotateAll 4s linear infinite;
}

.rotate-all-reverse {
  animation: rotateAll 4s linear infinite reverse;
}

@keyframes rotateAll {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.rotateY-all {
  animation: rotateYAll 4s linear infinite;
}

.rotateY-all-reverse {
  animation: rotateYAll 4s linear infinite reverse;
}

@keyframes rotateYAll {
  from {
    transform: rotateY(0deg);
  }

  to {
    transform: rotateY(360deg);
  }
}